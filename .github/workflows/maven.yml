name: Instant Build on Push

on:
  push:
    branches: [ main, master ]  # 监控的分支
    paths:                     # 触发构建的文件类型
      - 'src/**'
      - 'pom.xml'
      - '!**.md'               # 排除非代码文件

jobs:
  instant-build:
    runs-on: ubuntu-latest
    timeout-minutes: 10        # 防止长时间占用资源

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0         # 获取完整提交历史

    - name: Cache Maven Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.m2/repository
          target/
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        check-latest: true     # 确保使用最新补丁版本

    - name: Fast Build
      run: |
        # 智能跳过测试的构建策略
        changed_files=$(git diff --name-only HEAD^ HEAD)
        if [[ "$changed_files" != *"src/test"* ]]; then
          mvn -B clean package -DskipTests
        else
          mvn -B clean verify
        fi

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ github.sha }}
        path: |
          target/*.jar
          target/*.war
        retention-days: 3      # 缩短保留周期节省存储

    - name: Build Status Notification
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-log-${{ github.sha }}
        path: |
          **/surefire-reports/*.txt
          **/build.log
